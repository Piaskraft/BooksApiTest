# BooksApiTest
Projekt edukacyjny z moduÅ‚u 29.3 (Kodilla) â€” testy backendu Node.js

## Technologie
- Node.js + Express  
- MongoDB (Mongoose)  
- Mocha + Chai + Supertest  
- onchange (watcher)

## Uruchomienie
1. `npm install`
2. Ustaw w pliku .env  
   `MONGODB_URI_TEST=mongodb://127.0.0.1:27017/companyDBtest`
3. `npm test`  â€“ jednorazowe testy  
   `npm run test:watch`  â€“ tryb automatyczny  

## Zakres testÃ³w
- utils: `cutText`, `formatFullname`
- API: status / users / books
- model: `Department` CRUD (Read, Create, Update, Delete)

# ðŸ“˜ BooksApiTest â€“ ModuÅ‚ 29 (Testy jednostkowe backendu)

Projekt wykonany w ramach kursu Kodilla Full Stack Developer.

## ðŸ§ª Zakres:
- Testy jednostkowe (Mocha + Chai)
- Testy API (Chai-HTTP)
- PoÅ‚Ä…czenie z MongoDB (Mongoose)
- Konfiguracja Å›rodowisk: dev, test, prod

## âœ… Wynik:
Wszystkie testy zakoÅ„czone sukcesem:

![All tests passing](./images/tests_passing.jpg)

**48 passing (372ms)**  
Oznacza, Å¼e API dziaÅ‚a poprawnie i przeszÅ‚o peÅ‚nÄ… walidacjÄ™ CRUD (GET, POST, PUT, DELETE) oraz modele Mongoose.

---

